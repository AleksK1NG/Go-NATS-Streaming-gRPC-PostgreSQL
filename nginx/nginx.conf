user nginx;

# equal nproc
worker_processes auto;

error_log /var/log/nginx/error.log warn;
pid /run/nginx.pid;

worker_rlimit_nofile 20960;
http {

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    # Buffer size for POST submissions
    client_body_buffer_size 10k;
    client_max_body_size 10m;

    # Buffer size for Headers
    client_header_buffer_size 1k;


    # Max time to receive client headers/body
    client_body_timeout 12;
    client_header_timeout 12;

    # Max time to keep a connection open
    keepalive_timeout 65;

    # Max time fpr the client accept/receive a response
    send_timeout 10;

    # Skip buffering for static files
    sendfile on;

    # Optimise sendfile packets
    tcp_nopush on;

    access_log  /var/log/nginx/access.log;


    upstream microservice {
        server host.docker.internal:5000;
        server host.docker.internal:5001;
       # server localhost:5000;
       # server localhost:5001;
    }

    server {
        server_name microservice-nginx;

        listen 8080 ssl http2;
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        ssl_certificate /etc/nginx/certs/nginx-selfsigned.crt;
        ssl_certificate_key /etc/nginx/certs/nginx-selfsigned.key;

        location / {
            proxy_pass https://microservice/;
        }

        client_max_body_size 20M;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        add_header "x-nginx-trace" "$hostname-$server_port";
        add_header "server_name" "$server_name";
    }

}

events {
    # for worker_connections ulimit -n, worker_processes x worker_connections = max connections
    worker_connections 1024;
    multi_accept on;
    use epoll;
    epoll_events 512;
}